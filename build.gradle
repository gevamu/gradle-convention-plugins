/*
 * Copyright 2023 Exactpro Systems Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import static org.gradle.jvm.toolchain.JavaLanguageVersion.of

plugins {
    id "maven-publish"
    id "com.gradle.plugin-publish" version "0.18.0"
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
}

repositories {
    gradlePluginPortal()
    mavenCentral()
}

subprojects { Project subproject ->
    apply plugin: 'maven-publish'

    version = release_version
    group = 'com.gevamu.plugins'

    pluginManager.withPlugin('java') {
        java {
            toolchain {
                languageVersion = of(java_target_version)
            }
        }

        jar {
            manifest {
                attributes(
                    'Created-By': "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                    'Specification-Title': '',
                    'Specification-Vendor': 'Exactpro Systems LLC',
                    'Implementation-Title': project.archivesBaseName,
                    'Implementation-Vendor': 'Exactpro Systems LLC',
                    'Implementation-Vendor-Id': 'com.exactpro',
                    'Implementation-Version': project.version,
                    'Implementation-License': 'Apache License Version 2.0'
                )
            }
        }

        pluginManager.withPlugin('java-gradle-plugin') {
            pluginBundle {
                website = "$vcs_url"
                vcsUrl = "$vcs_url"
                tags = ['gevamu']

                mavenCoordinates {
                    groupId = subproject.group
                    artifactId = subproject.name
                }
            }
        }
    }

    pluginManager.withPlugin('org.jetbrains.kotlin.jvm') {
        kotlin {
            jvmToolchain {
                languageVersion = of(java_target_version)
            }
        }

        tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            kotlinOptions {
                // Kotlin 1.4 is the last version supporting Kotlin API 1.2 which is bundled with Corda 4
                apiVersion = '1.4'
                languageVersion = '1.4'
                freeCompilerArgs = ['-Xjvm-default=all']
            }
        }
    }

    tasks.withType(ValidatePlugins).configureEach {
        // Ask Gradle to tell us how to annotate tasks correctly.
        enableStricterValidation = true
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        enabled = false
    }

    publishing {
        repositories {
            maven {
                name = "test"
                setUrl("file://" + System.getenv("HOME") + "/.m2/repository/")
            }
        }

        publications {
            configureEach {
                pom {
                    url = vcs_url
                    scm {
                        url = vcs_url
                    }
                    licenses {
                        license {
                            name = "The Apache License, Version 2.0"
                            url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    scm {
                        connection = "scm:git:${vcs_url}.git"
                        developerConnection = "scm:git:${vcs_url}.git"
                        url = "${vcs_url}.git"
                    }
                    developers {
                        developer {
                            name.set("Gevamu")
                            organization.set("Exactpro Systems Limited")
                            organizationUrl.set("https://gevamu.com/")
                        }
                    }
                }
            }

            register(subproject.name, MavenPublication) {
                groupId = subproject.group
                artifactId = subproject.name
                pluginManager.withPlugin('java') {
                    if (subproject.hasProperty('mavenArtifacts')) {
                        subproject.mavenArtifacts.call(it)
                    } else {
                        from components.java
                    }

                    artifact tasks.register('sourcesJar', Jar) {
                        dependsOn subproject.classes
                        archiveClassifier = 'sources'
                        from sourceSets.main.allSource
                    }

                    pom {
                        name = subproject.name
                        description = subproject.description
                    }
                }

//                pluginManager.withPlugin('java-gradle-plugin') {
//                    subproject.extensions['gradlePlugin'].plugins.configureEach { plugin ->
//                        def pluginMarkerName = subproject.name + '-' + plugin.name
//                        register(pluginMarkerName, MavenPublication) {
//                            groupId subproject.group
//                            artifactId subproject.name + '.gradle.plugin'
//
//                            pom {
//                                name = "Gradle plugin marker for ${plugin.id}"
//                                description = subproject.description
//                                packaging 'pom'
//                                withXml {
//                                    def dependency = asNode().appendNode('dependencies').appendNode('dependency')
//                                    dependency.appendNode('groupId', subproject.group)
//                                    dependency.appendNode('artifactId', subproject.name)
//                                    dependency.appendNode('version', subproject.version)
//                                }
//                            }
//                        }
//                    }
//                }
            }
        }
    }
}
